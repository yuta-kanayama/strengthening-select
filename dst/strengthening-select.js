var OrderedSelectModel=Backbone.Model.extend({defaults:function(){return{val:"",selected:!1,iniVal:""}},initialize:function(){_.bindAll(this,"changeValue"),this.on("change:val",this.changeValue)},changeValue:function(){var e=this.get("val"),t=this.get("iniVal"),s=e!=t?!0:!1;this.set("selected",s)}}),OrderedSelectCollection=Backbone.Collection.extend({model:OrderedSelectModel}),OrderedSelect=Backbone.View.extend({events:{"change .ordered-select__select":"changeSelect"},initialize:function(){_.bindAll(this,"changeSelect","switchSubmitStatus","enableSelect","disableSelect","isCanSubmit"),this.$enabled=this.$(".ordered-select__submit--enabled"),this.$disabled=this.$(".ordered-select__submit--disabled"),this.$select=this.$(".ordered-select__select"),this.select=new OrderedSelectCollection,this.$select.each(_.bind(function(e,t){var s=$(t),l=s.val();this.select.add({val:l,iniVal:l})},this)),this.disableSelect(this.$select.not(":first")),this.switchSubmitStatus()},changeSelect:function(e){var t=$(e.target),s=t.val(),l=this.$select.index(e.target);this.select.at(l).set("val",s),this.switchSubmitStatus()},switchSubmitStatus:function(){this.isCanSubmit()?(this.$enabled.css("display","block"),this.$disabled.css("display","none")):(this.$enabled.css("display","none"),this.$disabled.css("display","block"))},enableSelect:function(e){e.removeClass("ordered-select__select--disabled").addClass("ordered-select__select--enabled").find("option").removeAttr("disabled"),e.parents(".ordered-select__select-wrapper").removeClass("ordered-select__select-wrapper--disabled").addClass("ordered-select__select-wrapper--enabled")},disableSelect:function(e){e.removeClass("ordered-select__select--enabled").addClass("ordered-select__select--disabled").find("option").attr("disabled","disabled"),e.parents(".ordered-select__select-wrapper").removeClass("ordered-select__select-wrapper--enabled").addClass("ordered-select__select-wrapper--disabled")},isCanSubmit:function(){var e=!0;return this.select.each(_.bind(function(t,s){var l=t.get("selected");l||(e=!1),s&&(this.select.at(s-1).get("selected")?this.enableSelect(this.$select.eq(s)):this.disableSelect(this.$select.eq(s)))},this)),e}}),SelectiveSelectModel=Backbone.Model.extend({defaults:function(){return{val:"",selected:!1,iniVal:""}},initialize:function(){_.bindAll(this,"changeValue"),this.on("change:val",this.changeValue)},changeValue:function(){var e=this.get("val"),t=this.get("iniVal"),s=e!=t?!0:!1;this.set("selected",s)}}),SelectiveSelectCollection=Backbone.Collection.extend({model:SelectiveSelectModel}),SelectiveSelect=Backbone.View.extend({events:{"change .selective-select__select":"changeSelect"},initialize:function(e){_.bindAll(this,"resetVal","changeSelect","switchSubmitStatus","isCanSubmit");var t={target:"all"};this.opt=_.extend(t,e),this.$enabled=this.$(".selective-select__submit--enabled"),this.$disabled=this.$(".selective-select__submit--disabled"),this.$select=this.$(".selective-select__select"),this.select=new SelectiveSelectCollection,this.$select.each(_.bind(function(e,t){var s=$(t),l=s.val();this.select.add({val:l,iniVal:l})},this)),this.switchSubmitStatus()},resetVal:function(){this.select.each(_.bind(function(e,t){var s=this.$select.eq(t).val();null==s&&(s=""),e.set("val",s)},this))},changeSelect:function(e){var t=$(e.target),s=t.val(),l=this.$select.index(e.target);this.select.at(l).set("val",s),this.switchSubmitStatus()},switchSubmitStatus:function(){this.isCanSubmit()?(this.$enabled.css("display","block"),this.$disabled.css("display","none")):(this.$enabled.css("display","none"),this.$disabled.css("display","block"))},isCanSubmit:function(){if(this.resetVal(),"any"==this.opt.target){var e=!1;this.select.each(_.bind(function(t,s){var l=t.get("selected");l&&(e=!0)},this))}else{var e=!0;this.select.each(_.bind(function(t,s){var l=t.get("selected");l||(e=!1)},this))}return e}});
//# sourceMappingURL=data:application/json;base64,